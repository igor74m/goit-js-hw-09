{"mappings":"gfAEA,IAAAA,EAAAC,EAAA,SACAD,EAAAE,OAAOC,KAAK,CAAEC,kBAAmB,WAAYC,qBAAsB,WAEnE,IAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAWF,SAASC,cAAc,yBAClCE,KAAKH,SAASC,cAAc,wBAC5BG,OAAOJ,SAASC,cAAc,2BAiBhC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAIP,SAASQ,EAAUC,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC7Bf,EAAAE,OAAOuB,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,CAG/D,SAASY,EAAQH,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC3Bf,EAAAE,OAAO0B,QAAQ,sBAAqCF,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,CAjC5DT,EAAKC,KAAKsB,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBAKF,IAJA,IAAMrB,EAAasB,OAAO1B,EAAKI,WAAWuB,OACpCtB,EAAOqB,OAAO1B,EAAKK,KAAKsB,OACxBrB,EAASoB,OAAO1B,EAAKM,OAAOqB,OAEzBC,EAAI,EAAGA,GAAKtB,EAAQsB,GAAK,EAAE,CAElCrB,EAAcqB,EADGxB,EAAaC,GAAQuB,EAAI,IACdC,KAAKZ,GAAWa,MAAMT,E","sources":["src/js/03-promises.js"],"sourcesContent":["\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nNotify.init({ cssAnimationStyle: 'from-top', fontAwesomeIconStyle: 'shadow' });\n\nconst refs = {\n  form: document.querySelector('.form'),\n  startDelay:document.querySelector('input[name = \"delay\"]'),\n  step:document.querySelector('input[name = \"step\"]'),\n  amount:document.querySelector('input[name = \"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const startDelay = Number(refs.startDelay.value);\n  const step = Number(refs.step.value);\n  const amount = Number(refs.amount.value);\n  \n  for (let i = 1; i <= amount; i += 1){\n    const delayStep =startDelay + step * (i - 1);\n    createPromise(i, delayStep).then(onSuccess).catch(onError)\n  };\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((fulfill, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        fulfill({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay);\n  });\n};\n\nfunction onSuccess({ position, delay }) { \n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n\nfunction onError({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};"],"names":["$h6c0i","parcelRequire","Notify","init","cssAnimationStyle","fontAwesomeIconStyle","$ce04d3a99e08e73b$var$refs","form","document","querySelector","startDelay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","fulfill","reject","setTimeout","$ce04d3a99e08e73b$var$onSuccess","param","success","concat","$ce04d3a99e08e73b$var$onError","failure","addEventListener","e","preventDefault","Number","value","i","then","catch"],"version":3,"file":"03-promises.4155d1b5.js.map"}